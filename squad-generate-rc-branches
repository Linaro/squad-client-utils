#!/usr/bin/python3
# -*- coding: utf-8 -*-
# vim: set ts=4
#
# Copyright 2023-present Linaro Limited
#
# SPDX-License-Identifier: MIT


from argparse import ArgumentParser
from logging import DEBUG, INFO, basicConfig, getLogger
from os import getenv
from sys import exit

from squad_client.core.api import SquadApi

from squadutilslib import get_recent_branches

squad_host_url = "https://qa-reports.linaro.org/"
SquadApi.configure(cache=3600, url=getenv("SQUAD_HOST", squad_host_url))

basicConfig(level=INFO)
logger = getLogger(__name__)


def parse_args(raw_args):
    parser = ArgumentParser(
        description="Get the branches that were pushed to for a SQUAD group over a given number of days."
    )

    parser.add_argument(
        "--group",
        required=True,
        help="The name of the SQUAD group.",
    )

    parser.add_argument(
        "--days",
        required=False,
        default=7,
        type=int,
        help="The number of days to look back.",
    )

    parser.add_argument(
        "--must-not-contain",
        required=False,
        default=["sanity", "tools"],
        help="Ignore project names that contain any of these terms.",
    )

    parser.add_argument(
        "--must-contain",
        required=False,
        default=["master", "next", "linux-stable"],
        help="Project names must contain one of these terms.",
    )

    parser.add_argument(
        "--debug",
        required=False,
        action="store_true",
        default=False,
        help="Display debug messages.",
    )
    return parser.parse_args(raw_args)


def run(raw_args=None):
    args = parse_args(raw_args)
    if args.debug:
        logger.setLevel(level=DEBUG)

    recent_projects = get_recent_branches(
        args.group, args.days, args.must_contain, args.must_not_contain, args.debug
    )

    # Print the branch for each project
    for branch in recent_projects.values():
        print(f"{branch}")


if __name__ == "__main__":
    exit(run())
