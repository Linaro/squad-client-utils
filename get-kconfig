#!/usr/bin/env python3

import argparse
import hashlib
import json
import logging
import sys
import yaml

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def arg_parser():
    parser = argparse.ArgumentParser(description="List all kernel configs for a build test")

    parser.add_argument(
        "--tuxconfig",
        required=True,
        help="tuxconfig yaml",
    )

    parser.add_argument(
        "--name",
        required=True,
        help="test name",
    )

    return parser

def test_name(kconfig, toolchain):
    if len(kconfig[1:]):
        kconfig_hash = "%s-%s" % (
            kconfig[0],
            hashlib.sha1(json.dumps(kconfig[1:]).encode()).hexdigest()[0:8],
        )
    else:
        kconfig_hash = kconfig[0]

    return "%s-%s" % (toolchain, kconfig_hash)

def run():
    args = arg_parser().parse_args()

    with open(args.tuxconfig, "r") as tuxconfig_yaml:
        tc = yaml.safe_load(tuxconfig_yaml)

    flat = []
    for sset in tc["sets"]:
        for build in sset["builds"]:
            if type(build["kconfig"]) == list:
                if args.name == test_name(build["kconfig"], build["toolchain"]):
                    flat.append({
                        "name": args.name,
                        "set": sset["name"],
                        "build": build,
                    })

    print(json.dumps(flat,indent=2))


if __name__ == "__main__":
    sys.exit(run())
